<?xml version="1.0"?>
<Container version="2">
  <Name>Spotweb</Name>
  <Repository>erikdevries/spotweb</Repository>
  <Registry>https://hub.docker.com/r/erikdevries/spotweb</Registry>
  <Network>bridge</Network>
  <MyIP/>
  <Shell>sh</Shell>
  <Privileged>false</Privileged>
  <Support/>
  <Project>https://github.com/spotweb/spotweb</Project>
  <Overview>Spotweb is a decentralized usenet community based on the Spotnet protocol.&#xD;
&#xD;
The only required manual configuration is setting up a valid usenet server(besides having an external mysql)&#xD;
&#xD;
Spotweb is configured as an open system after running docker-compose up, so everyone who can access can register an account (keep this in mind)&#xD;
&#xD;
If you want to use the Spotweb API, create a new user and use the API key associated with that user&#xD;
&#xD;
To prevent having to configure Spotweb manually upgrade-db.php is run to upgrade the database and reset the password for the admin user (so currently the admin always has password spotweb)&#xD;
&#xD;
Crond is used to run the retrieve.php script which updates Spotweb with the latest headers from a configured usenet server, the crontab is run every hour&#xD;
&#xD;
Depending on what you like, you can mount the /nzb volume and let Spotweb save nzb's to that directory (e.g. mount /nzb to a folder watched by sabnzbd)</Overview>
  <Category>Downloaders: Tools: Status:Stable</Category>
  <WebUI>http://[IP]:[PORT:80]</WebUI>
  <TemplateURL/>
  <Icon>https://raw.githubusercontent.com/L4stIdi0t/Unraid-template/master/Spotweb/spotweb-logo.png</Icon>
  <ExtraParams/>
  <PostArgs/>
  <CPUset/>
  <DateInstalled>1637746735</DateInstalled>
  <DonateText/>
  <DonateLink/>
  <Description>Spotweb is a decentralized usenet community based on the Spotnet protocol.&#xD;
&#xD;
The only required manual configuration is setting up a valid usenet server&#xD;
&#xD;
Spotweb is configured as an open system after running docker-compose up, so everyone who can access can register an account (keep this in mind)&#xD;
&#xD;
If you want to use the Spotweb API, create a new user and use the API key associated with that user&#xD;
&#xD;
To prevent having to configure Spotweb manually upgrade-db.php is run to upgrade the database and reset the password for the admin user (so currently the admin always has password spotweb)&#xD;
&#xD;
Crond is used to run the retrieve.php script which updates Spotweb with the latest headers from a configured usenet server, the crontab is run every hour&#xD;
&#xD;
Depending on what you like, you can mount the /nzb volume and let Spotweb save nzb's to that directory (e.g. mount /nzb to a folder watched by sabnzbd)</Description>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort>8080</HostPort>
        <ContainerPort>80</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Data>
    <Volume>
      <HostDir/>
      <ContainerDir>/nzb</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <Environment>
    <Variable>
      <Value>mysql</Value>
      <Name>DB_HOST</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>3306</Value>
      <Name>DB_PORT</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value/>
      <Name>DB_NAME</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value/>
      <Name>DB_USER</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value/>
      <Name>DB_PASS</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>pdo_mysql</Value>
      <Name>DB_ENGINE</Name>
      <Mode/>
    </Variable>
  </Environment>
  <Labels/>
  <Config Name="WebUI port" Target="80" Default="8080" Mode="tcp" Description="The port for the web UI" Type="Port" Display="always" Required="true" Mask="false">8080</Config>
  <Config Name="Automated NZB's" Target="/nzb" Default="" Mode="rw" Description="You can mount the /nzb volume and let Spotweb save nzb's to that directory" Type="Path" Display="always" Required="false" Mask="false"/>
  <Config Name="DB_HOST" Target="DB_HOST" Default="mysql" Mode="" Description="Container Variable: DB_HOST" Type="Variable" Display="always" Required="true" Mask="false">mysql</Config>
  <Config Name="DB_PORT" Target="DB_PORT" Default="3306" Mode="" Description="Container Variable: DB_PORT" Type="Variable" Display="always" Required="true" Mask="false">3306</Config>
  <Config Name="DB_NAME" Target="DB_NAME" Default="" Mode="" Description="Container Variable: DB_NAME" Type="Variable" Display="always" Required="true" Mask="false"/>
  <Config Name="DB_USER" Target="DB_USER" Default="" Mode="" Description="Container Variable: DB_USER" Type="Variable" Display="always" Required="true" Mask="false"/>
  <Config Name="DB_PASS" Target="DB_PASS" Default="" Mode="" Description="Container Variable: DB_PASS" Type="Variable" Display="always" Required="true" Mask="false"/>
  <Config Name="DB_ENGINE" Target="DB_ENGINE" Default="pdo_mysql" Mode="" Description="Container Variable: DB_ENGINE" Type="Variable" Display="always" Required="true" Mask="false">pdo_mysql</Config>
</Container>
